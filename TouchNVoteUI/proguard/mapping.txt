android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.z:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aa:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ab:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ac:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ad:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ae:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.af:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ag:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ah:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ai:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aj:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ak:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.al:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.am:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.an:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ao:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ap:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.aq:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ar:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.as:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.at:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.au:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.av:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.aw:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.saulpower.piechart.adapter.BasePieChartAdapter -> com.saulpower.piechart.a.a:
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.saulpower.piechart.views.PieSliceDrawable getSlice(com.saulpower.piechart.views.PieChartView,com.saulpower.piechart.views.PieSliceDrawable,int,float) -> a
    float getPercent(int) -> a
com.saulpower.piechart.adapter.PieChartAdapter -> com.saulpower.piechart.a.b:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    java.util.List mObjects -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    void init(android.content.Context,java.util.List) -> a
    float getPercent(int) -> a
    com.saulpower.piechart.views.PieSliceDrawable getSlice(com.saulpower.piechart.views.PieChartView,com.saulpower.piechart.views.PieSliceDrawable,int,float) -> a
com.saulpower.piechart.extra.Constant -> com.saulpower.piechart.b.a:
    int[] RANDOM_COLORS -> a
com.saulpower.piechart.extra.Dynamics -> com.saulpower.piechart.b.b:
    java.lang.String TAG -> a
    float mPosition -> b
    float mVelocity -> c
    long mLastTime -> d
    void setState(float,float,long) -> a
    float getPosition() -> a
    float getVelocity() -> b
    boolean isAtRest(float) -> a
    void update(long) -> a
    void onUpdate(int) -> a
com.saulpower.piechart.extra.FrictionDynamics -> com.saulpower.piechart.b.c:
    float mFrictionFactor -> e
    void onUpdate(int) -> a
com.saulpower.piechart.extra.UiUtils -> com.saulpower.piechart.b.d:
    float getDynamicPixels(android.content.Context,float) -> a
    android.util.DisplayMetrics getDisplayMetrics(android.content.Context) -> a
    int getRandomColor(android.content.Context,int) -> a
com.saulpower.piechart.views.CaretDrawable -> com.saulpower.piechart.views.a:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    int mColor -> c
    float mWidth -> d
    float mHeight -> e
    android.graphics.PointF mPosition -> f
    android.graphics.Paint mPaint -> g
    android.graphics.Paint mShadowPaint -> h
    android.graphics.PointF mPoint1 -> i
    android.graphics.PointF mPoint2 -> j
    android.graphics.PointF mPoint3 -> k
    android.graphics.Path mPath -> l
    boolean mShadow -> m
    float mDegrees -> n
    void setColor(int) -> a
    void createPath() -> a
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.saulpower.piechart.views.InfoDrawable -> com.saulpower.piechart.views.b:
    java.lang.String TAG -> a
    com.saulpower.piechart.views.PieChartView mChart -> b
    android.graphics.Paint mTitlePaint -> c
    android.graphics.Paint mAmountPaint -> d
    android.graphics.Paint mSubTitlePaint -> e
    float mRadius -> f
    android.graphics.Rect mTitleBounds -> g
    android.graphics.Rect mAmountBounds -> h
    android.graphics.Rect mSubTitleBounds -> i
    android.graphics.PointF mTitlePoint -> j
    android.graphics.PointF mAmountPoint -> k
    android.graphics.PointF mSubTitlePoint -> l
    float mTitleOffset -> m
    float mSubTitleOffset -> n
    java.lang.String mTitle -> o
    java.lang.String mAmount -> p
    java.lang.String mSubTitle -> q
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.saulpower.piechart.views.PieChartView -> com.saulpower.piechart.views.PieChartView:
    java.lang.String TAG -> a
    com.saulpower.piechart.views.PieChartView$DrawThread mDrawThread -> b
    int mTouchState -> c
    int mScrollThreshold -> d
    android.view.VelocityTracker mVelocityTracker -> e
    com.saulpower.piechart.extra.Dynamics mDynamics -> f
    java.lang.Runnable mDynamicsRunnable -> g
    java.lang.Runnable mLongPressRunnable -> h
    com.saulpower.piechart.adapter.BasePieChartAdapter mAdapter -> i
    int mTouchStartX -> j
    int mTouchStartY -> k
    float mSnapToDegree -> l
    float mRotationStart -> m
    float mLastRotation -> n
    boolean mRotatingClockwise -> o
    int mChartDiameter -> p
    float mInfoRadius -> q
    float mPixelDensity -> r
    android.graphics.PointF mCenter -> s
    float mStrokeWidth -> t
    float mRotationDegree -> u
    float mChartScale -> v
    boolean mChartHidden -> w
    boolean mNeedsToggle -> x
    boolean mNeedsUpdate -> y
    boolean mShowInfo -> z
    boolean mLoaded -> A
    java.util.List mDrawables -> B
    java.util.LinkedList mRecycledDrawables -> C
    com.saulpower.piechart.views.InfoDrawable mInfoDrawable -> D
    com.saulpower.piechart.views.CaretDrawable mCaret -> E
    int mInfoAlpha -> F
    int mCurrentIndex -> G
    android.graphics.Bitmap mDrawingCache -> H
    com.saulpower.piechart.views.PieChartView$OnPieChartChangeListener mOnPieChartChangeListener -> I
    com.saulpower.piechart.views.PieChartView$OnItemLongClickListener mOnItemLongClickListener -> J
    com.saulpower.piechart.views.PieChartView$OnInfoClickListener mOnInfoClickListener -> K
    com.saulpower.piechart.views.PieChartView$OnPieChartExpandListener mOnPieChartExpandListener -> L
    com.saulpower.piechart.views.PieChartView$OnPieChartReadyListener mOnPieChartReadyListener -> M
    com.saulpower.piechart.views.PieChartView$OnItemClickListener mOnItemClickListener -> N
    com.saulpower.piechart.views.PieChartView$OnRotationStateChangeListener mOnRotationStateChangeListener -> O
    com.saulpower.piechart.views.PieChartView$AdapterDataSetObserver mDataSetObserver -> P
    android.os.Handler mHandler -> Q
    android.graphics.Paint mPaint -> R
    android.graphics.Paint mStrokePaint -> S
    void setTouchState(int) -> setTouchState
    android.graphics.Bitmap getDrawingCache() -> getDrawingCache
    void setDynamics(com.saulpower.piechart.extra.Dynamics) -> setDynamics
    void setRotationDegree(float) -> setRotationDegree
    float getRotationDegree() -> getRotationDegree
    int getCurrentIndex() -> getCurrentIndex
    void setCurrentIndex(int) -> setCurrentIndex
    void setSnapToAnchor(com.saulpower.piechart.views.PieChartView$PieChartAnchor) -> setSnapToAnchor
    float getChartDiameter() -> getChartDiameter
    float getChartRadius() -> getChartRadius
    boolean isLoaded() -> a
    void setLoaded(boolean) -> setLoaded
    com.saulpower.piechart.views.InfoDrawable getInfoDrawable() -> getInfoDrawable
    void setSelection(int) -> setSelection
    com.saulpower.piechart.views.PieChartView$DrawThread getDrawThread() -> getDrawThread
    void onResume() -> b
    com.saulpower.piechart.views.PieChartView$OnPieChartChangeListener getOnPieChartChangeListener() -> getOnPieChartChangeListener
    void setOnPieChartChangeListener(com.saulpower.piechart.views.PieChartView$OnPieChartChangeListener) -> setOnPieChartChangeListener
    void setOnPieChartExpandListener(com.saulpower.piechart.views.PieChartView$OnPieChartExpandListener) -> setOnPieChartExpandListener
    void setOnPieChartReadyListener(com.saulpower.piechart.views.PieChartView$OnPieChartReadyListener) -> setOnPieChartReadyListener
    com.saulpower.piechart.views.PieChartView$OnRotationStateChangeListener getOnRotationStateChangeListener() -> getOnRotationStateChangeListener
    void setOnRotationStateChangeListener(com.saulpower.piechart.views.PieChartView$OnRotationStateChangeListener) -> setOnRotationStateChangeListener
    com.saulpower.piechart.views.PieChartView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemLongClickListener(com.saulpower.piechart.views.PieChartView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.saulpower.piechart.views.PieChartView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    void setOnItemClickListener(com.saulpower.piechart.views.PieChartView$OnItemClickListener) -> setOnItemClickListener
    void setOnInfoClickListener(com.saulpower.piechart.views.PieChartView$OnInfoClickListener) -> setOnInfoClickListener
    void init() -> d
    void initPaints() -> e
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    float calculateVelocity() -> f
    void startTouch(android.view.MotionEvent) -> a
    void endTouch(float,float,float) -> a
    boolean startScrollIfNeeded(android.view.MotionEvent) -> b
    void startLongPressCheck() -> g
    void clickChildAt(int,int) -> a
    boolean performItemClick(boolean,com.saulpower.piechart.views.PieSliceDrawable,int,long) -> a
    void longClickChild(int) -> a
    int getContainingChildIndex(int,int) -> b
    boolean inCircle(int,int) -> c
    boolean inInfoCircle(int,int) -> d
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void addPieSlices() -> h
    android.graphics.Rect getBounds() -> getBounds
    com.saulpower.piechart.views.PieSliceDrawable getRecycledSlice() -> getRecycledSlice
    void createCaret() -> i
    void createInfo() -> j
    int toggleChart() -> c
    void onChartChanged(boolean) -> a
    void snapTo() -> k
    void snapTo(boolean) -> b
    void animateTo(int) -> b
    void animateTo(com.saulpower.piechart.views.PieSliceDrawable,int) -> a
    void animateTo(float,float) -> a
    void rotateChart(com.saulpower.piechart.views.PieSliceDrawable,int,boolean) -> a
    void rotateChart(float,float) -> b
    void rotateChart(float) -> a
    void setRotatingClockwise(float) -> setRotatingClockwise
    com.saulpower.piechart.adapter.BasePieChartAdapter getPieChartAdapter() -> getPieChartAdapter
    void setAdapter(com.saulpower.piechart.adapter.BasePieChartAdapter) -> setAdapter
    float validAdapter(com.saulpower.piechart.adapter.BasePieChartAdapter) -> a
    void resetChart() -> l
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void access$0(com.saulpower.piechart.views.PieChartView) -> a
    com.saulpower.piechart.views.PieChartView$OnPieChartReadyListener access$1(com.saulpower.piechart.views.PieChartView) -> b
    java.util.List access$2(com.saulpower.piechart.views.PieChartView) -> c
    com.saulpower.piechart.adapter.BasePieChartAdapter access$3(com.saulpower.piechart.views.PieChartView) -> d
    void access$4(com.saulpower.piechart.views.PieChartView) -> e
    void access$5(com.saulpower.piechart.views.PieChartView) -> f
    android.graphics.Bitmap access$6(com.saulpower.piechart.views.PieChartView) -> g
    float access$7(com.saulpower.piechart.views.PieChartView) -> h
    float access$8(com.saulpower.piechart.views.PieChartView) -> i
    boolean access$9(com.saulpower.piechart.views.PieChartView) -> j
    void access$10(com.saulpower.piechart.views.PieChartView,float) -> a
    void access$11(com.saulpower.piechart.views.PieChartView,int) -> a
    void access$12(com.saulpower.piechart.views.PieChartView,android.graphics.Bitmap) -> a
    android.graphics.PointF access$14(com.saulpower.piechart.views.PieChartView) -> k
    float access$15(com.saulpower.piechart.views.PieChartView) -> l
    android.graphics.Paint access$16(com.saulpower.piechart.views.PieChartView) -> m
    void access$17(com.saulpower.piechart.views.PieChartView) -> n
    float access$18(com.saulpower.piechart.views.PieChartView) -> o
    android.graphics.Paint access$19(com.saulpower.piechart.views.PieChartView) -> p
    com.saulpower.piechart.views.CaretDrawable access$20(com.saulpower.piechart.views.PieChartView) -> q
    com.saulpower.piechart.views.InfoDrawable access$21(com.saulpower.piechart.views.PieChartView) -> r
    int access$22(com.saulpower.piechart.views.PieChartView) -> s
    void access$23(com.saulpower.piechart.views.PieChartView,boolean) -> a
    void access$24(com.saulpower.piechart.views.PieChartView) -> t
    void access$25(com.saulpower.piechart.views.PieChartView,android.os.Parcelable) -> a
    android.os.Parcelable access$26(com.saulpower.piechart.views.PieChartView) -> u
    com.saulpower.piechart.views.PieChartView$OnPieChartChangeListener access$27(com.saulpower.piechart.views.PieChartView) -> v
    com.saulpower.piechart.extra.Dynamics access$28(com.saulpower.piechart.views.PieChartView) -> w
    void access$29(com.saulpower.piechart.views.PieChartView,float) -> b
    int access$30(com.saulpower.piechart.views.PieChartView) -> x
    int access$31(com.saulpower.piechart.views.PieChartView) -> y
    int access$32(com.saulpower.piechart.views.PieChartView) -> z
    int access$33(com.saulpower.piechart.views.PieChartView,int,int) -> a
    void access$34(com.saulpower.piechart.views.PieChartView,int) -> b
    boolean access$35(com.saulpower.piechart.views.PieChartView) -> A
    com.saulpower.piechart.views.PieChartView$OnRotationStateChangeListener access$36(com.saulpower.piechart.views.PieChartView) -> B
com.saulpower.piechart.views.PieChartView$1 -> com.saulpower.piechart.views.c:
    com.saulpower.piechart.views.PieChartView this$0 -> a
    int val$index -> b
    void run() -> run
com.saulpower.piechart.views.PieChartView$2 -> com.saulpower.piechart.views.d:
    com.saulpower.piechart.views.PieChartView this$0 -> a
    void run() -> run
com.saulpower.piechart.views.PieChartView$3 -> com.saulpower.piechart.views.e:
    com.saulpower.piechart.views.PieChartView this$0 -> a
    void run() -> run
com.saulpower.piechart.views.PieChartView$4 -> com.saulpower.piechart.views.f:
    com.saulpower.piechart.views.PieChartView this$0 -> a
    void onAnimationEnded() -> a
com.saulpower.piechart.views.PieChartView$5 -> com.saulpower.piechart.views.g:
    com.saulpower.piechart.views.PieChartView this$0 -> a
    void onAnimationEnded() -> a
com.saulpower.piechart.views.PieChartView$AdapterDataSetObserver -> com.saulpower.piechart.views.h:
    android.os.Parcelable mInstanceState -> b
    com.saulpower.piechart.views.PieChartView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.saulpower.piechart.views.PieChartView$DrawThread -> com.saulpower.piechart.views.i:
    android.view.SurfaceHolder mSurfaceHolder -> b
    boolean mIsRunning -> c
    java.lang.Object mPauseLock -> d
    boolean mPaused -> e
    com.saulpower.piechart.views.ThreadAnimator mRotateAnimator -> f
    com.saulpower.piechart.views.ThreadAnimator mScaleAnimator -> g
    com.saulpower.piechart.views.ThreadAnimator mInfoAnimator -> h
    android.os.Handler mHandler -> i
    com.saulpower.piechart.views.PieChartView this$0 -> a
    void setRunning(boolean) -> a
    void setRotateAnimator(com.saulpower.piechart.views.ThreadAnimator) -> a
    void setScaleAnimator(com.saulpower.piechart.views.ThreadAnimator) -> b
    void onResume() -> a
    void run() -> run
    void updateAnimators() -> b
    void buildDrawingCache() -> c
    void doDraw(android.graphics.Canvas,float,float,boolean) -> a
    com.saulpower.piechart.views.PieChartView access$0(com.saulpower.piechart.views.PieChartView$DrawThread) -> a
com.saulpower.piechart.views.PieChartView$DrawThread$1 -> com.saulpower.piechart.views.j:
    com.saulpower.piechart.views.PieChartView$DrawThread this$1 -> a
    void run() -> run
com.saulpower.piechart.views.PieChartView$OnInfoClickListener -> com.saulpower.piechart.views.k:
    void onInfoClicked(int) -> a
com.saulpower.piechart.views.PieChartView$OnItemClickListener -> com.saulpower.piechart.views.l:
    void onItemClick(boolean,android.view.View,android.graphics.drawable.Drawable,int,long) -> a
com.saulpower.piechart.views.PieChartView$OnItemLongClickListener -> com.saulpower.piechart.views.m:
    void onItemLongClick(android.view.View,android.graphics.drawable.Drawable,int,long) -> a
com.saulpower.piechart.views.PieChartView$OnPieChartChangeListener -> com.saulpower.piechart.views.n:
    void onSelectionChanged(int) -> a
com.saulpower.piechart.views.PieChartView$OnPieChartExpandListener -> com.saulpower.piechart.views.o:
    void onPieChartExpanded() -> a
    void onPieChartCollapsed() -> b
com.saulpower.piechart.views.PieChartView$OnPieChartReadyListener -> com.saulpower.piechart.views.p:
    void onPieChartReady() -> a
com.saulpower.piechart.views.PieChartView$OnRotationStateChangeListener -> com.saulpower.piechart.views.q:
    void onRotationStateChange(int) -> a
com.saulpower.piechart.views.PieChartView$PieChartAnchor -> com.saulpower.piechart.views.r:
    com.saulpower.piechart.views.PieChartView$PieChartAnchor TOP -> a
    com.saulpower.piechart.views.PieChartView$PieChartAnchor RIGHT -> b
    com.saulpower.piechart.views.PieChartView$PieChartAnchor BOTTOM -> c
    com.saulpower.piechart.views.PieChartView$PieChartAnchor LEFT -> d
    float degrees -> e
    com.saulpower.piechart.views.PieChartView$PieChartAnchor[] ENUM$VALUES -> f
    com.saulpower.piechart.views.PieChartView$PieChartAnchor[] values() -> values
    com.saulpower.piechart.views.PieChartView$PieChartAnchor valueOf(java.lang.String) -> valueOf
    float access$2(com.saulpower.piechart.views.PieChartView$PieChartAnchor) -> a
com.saulpower.piechart.views.PieSliceDrawable -> com.saulpower.piechart.views.s:
    java.lang.String TAG -> a
    int DEFAULT_STROKE_WIDTH -> b
    float mDegreeOffset -> c
    float mPercent -> d
    android.graphics.RectF mBounds -> e
    android.graphics.Paint mPaint -> f
    android.graphics.Paint mStrokePaint -> g
    android.content.Context mContext -> h
    float mStrokeWidth -> i
    android.graphics.Path mPathRight -> j
    android.graphics.Path mPathLeft -> k
    void setDegreeOffset(float) -> a
    float getDegrees() -> a
    void setPercent(float) -> b
    float getSliceCenter() -> b
    boolean containsDegree(float,float) -> a
    int getSliceColor() -> c
    void setSliceColor(int) -> a
    void init() -> d
    void setBounds(int,int,int,int) -> setBounds
    void updateBounds() -> e
    android.graphics.Path createPath(float,float) -> b
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.saulpower.piechart.views.ThreadAnimator -> com.saulpower.piechart.views.t:
    com.saulpower.piechart.views.ThreadAnimator$AnimationListener mAnimationListener -> a
    float mStart -> b
    float mEnd -> c
    float mChange -> d
    long mStartTime -> e
    long mDuration -> f
    android.view.animation.Interpolator mInterpolator -> g
    boolean mRunning -> h
    void setAnimationListener(com.saulpower.piechart.views.ThreadAnimator$AnimationListener) -> a
    boolean isRunning() -> a
    void setDuration(long) -> a
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.saulpower.piechart.views.ThreadAnimator ofFloat(float,float) -> a
    float floatUpdate() -> b
    int intUpdate() -> c
    void start() -> d
com.saulpower.piechart.views.ThreadAnimator$AnimationListener -> com.saulpower.piechart.views.u:
    void onAnimationEnded() -> a
com.touchnvoteui.AddNewClassActivity -> com.touchnvoteui.AddNewClassActivity:
    android.widget.Spinner seasonSpinner -> a
    android.widget.EditText startDateEditText -> b
    android.widget.Spinner startMonthSpinner -> c
    android.widget.EditText startYearEditText -> d
    android.widget.EditText endDateEditText -> e
    android.widget.Spinner endMonthSpinner -> f
    android.widget.EditText endYearEditText -> g
    android.widget.TimePicker classTime -> h
    android.widget.Button addClassButton -> i
    java.lang.String classid -> j
    java.lang.String classstartdate -> k
    java.lang.String classenddate -> l
    java.lang.String classtime -> m
    android.view.View$OnClickListener classButtonListener -> o
    java.lang.String result -> n
    void onCreate(android.os.Bundle) -> onCreate
    boolean validateAlphabets(java.lang.String) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean access$0(com.touchnvoteui.AddNewClassActivity,java.lang.String) -> a
com.touchnvoteui.AddNewClassActivity$1 -> com.touchnvoteui.a:
    com.touchnvoteui.AddNewClassActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.AddNewClassActivity$callStoreClass -> com.touchnvoteui.b:
    com.touchnvoteui.AddNewClassActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.touchnvoteui.AddNewClassActivity access$3(com.touchnvoteui.AddNewClassActivity$callStoreClass) -> a
com.touchnvoteui.AddNewClassActivity$callStoreClass$1 -> com.touchnvoteui.c:
    com.touchnvoteui.AddNewClassActivity$callStoreClass this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.touchnvoteui.AddNewStudentActivity -> com.touchnvoteui.AddNewStudentActivity:
    android.widget.Button oneStudentButton -> a
    android.view.View$OnClickListener studentSaveListener -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.touchnvoteui.AddNewStudentActivity$1 -> com.touchnvoteui.d:
    com.touchnvoteui.AddNewStudentActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.AddNewStudentActivity$ClassAvailableTask -> com.touchnvoteui.e:
    java.lang.String result -> b
    com.touchnvoteui.AddNewStudentActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.CheckForQuizActivity -> com.touchnvoteui.CheckForQuizActivity:
    java.lang.String username -> a
    java.lang.String userclass -> b
    android.view.View$OnClickListener buttonListener -> c
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    java.lang.String access$0(com.touchnvoteui.CheckForQuizActivity) -> a
    java.lang.String access$1(com.touchnvoteui.CheckForQuizActivity) -> b
com.touchnvoteui.CheckForQuizActivity$1 -> com.touchnvoteui.f:
    com.touchnvoteui.CheckForQuizActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.CheckForQuizActivity$GetPoll -> com.touchnvoteui.g:
    com.touchnvoteui.CheckForQuizActivity this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.ClassSelectionToPost -> com.touchnvoteui.ClassSelectionToPost:
    java.lang.String quizlist -> c
    android.widget.Spinner quizListSpinner -> a
    android.widget.Button postQuizButton -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.touchnvoteui.ClassSelectionToPost$1 -> com.touchnvoteui.h:
    com.touchnvoteui.ClassSelectionToPost this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.ClassSelectionToPost$postQuizTask -> com.touchnvoteui.i:
    java.lang.String result -> b
    com.touchnvoteui.ClassSelectionToPost this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.DisplayResultActivity -> com.touchnvoteui.DisplayResultActivity:
    java.lang.String resultstring -> j
    android.widget.TextView noResultTitle -> k
    android.widget.TextView answer1TextView -> l
    android.widget.TextView answer2TextView -> m
    android.widget.TextView answer3TextView -> n
    android.widget.TextView answer4TextView -> o
    android.widget.TextView answerOption1TextView -> p
    android.widget.TextView answerOption2TextView -> q
    android.widget.TextView answerOption3TextView -> r
    android.widget.TextView answerOption4TextView -> s
    android.widget.TextView answerOption5TextView -> t
    android.widget.TextView answerOption6TextView -> u
    android.widget.TextView answerOption7TextView -> v
    android.widget.TextView answerOption8TextView -> w
    android.widget.TextView answerOption9TextView -> x
    android.widget.TextView answerOption10TextView -> y
    android.widget.TextView answerOption11TextView -> z
    android.widget.TextView answerOption12TextView -> A
    android.widget.TextView answerOption13TextView -> B
    android.widget.TextView answerOption14TextView -> C
    android.widget.TextView answerOption15TextView -> D
    android.widget.TextView answerOption16TextView -> E
    java.util.List answercount1 -> a
    java.util.List answercount2 -> b
    java.util.List answercount3 -> c
    java.util.List answercount4 -> d
    int total1 -> e
    int total2 -> f
    int total3 -> g
    int total4 -> h
    java.lang.String sendingoption -> i
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.touchnvoteui.ForgotPasswordActivity -> com.touchnvoteui.ForgotPasswordActivity:
    android.widget.EditText username -> a
    android.widget.Button requestbutton -> b
    java.lang.String result -> c
    android.view.View$OnClickListener requestButtonListener -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean validateNetId() -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean access$0(com.touchnvoteui.ForgotPasswordActivity) -> a
com.touchnvoteui.ForgotPasswordActivity$1 -> com.touchnvoteui.j:
    com.touchnvoteui.ForgotPasswordActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.ForgotPasswordActivity$getUserSecurityQuestions -> com.touchnvoteui.k:
    com.touchnvoteui.ForgotPasswordActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.InternetConnectivityCheck -> com.touchnvoteui.l:
    boolean checkINetConnection(android.content.Context) -> a
com.touchnvoteui.OneStudentEnrollActivity -> com.touchnvoteui.OneStudentEnrollActivity:
    android.widget.EditText netIdSEEditText -> a
    android.widget.Spinner classSpinner -> b
    android.widget.Button addStudentButton -> c
    java.lang.String classlist -> d
    android.view.View$OnClickListener saveStudentListener -> e
    void onCreate(android.os.Bundle) -> onCreate
    boolean validateNetId() -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean access$0(com.touchnvoteui.OneStudentEnrollActivity) -> a
com.touchnvoteui.OneStudentEnrollActivity$1 -> com.touchnvoteui.m:
    com.touchnvoteui.OneStudentEnrollActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.OneStudentEnrollActivity$saveStudentHandler -> com.touchnvoteui.n:
    java.lang.String result -> b
    com.touchnvoteui.OneStudentEnrollActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.ParseResponse -> com.touchnvoteui.o:
    java.lang.StringBuilder getResult(org.apache.http.HttpResponse) -> a
com.touchnvoteui.PasswordChangeActivity -> com.touchnvoteui.PasswordChangeActivity:
    java.lang.String username -> a
    android.widget.EditText password -> b
    android.widget.EditText confirmPassword -> c
    android.view.View$OnClickListener changePasswordListener -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.touchnvoteui.PasswordChangeActivity$1 -> com.touchnvoteui.p:
    com.touchnvoteui.PasswordChangeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.PasswordChangeActivity$UpdatePassword -> com.touchnvoteui.q:
    java.lang.String result -> b
    com.touchnvoteui.PasswordChangeActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.PostQuizActivity -> com.touchnvoteui.PostQuizActivity:
    android.widget.Spinner classListSpinner -> a
    android.widget.Spinner monthClassSpinner -> b
    android.widget.Spinner yearClassSpinner -> c
    android.widget.EditText dateEditText -> d
    android.widget.EditText classTitleEditText -> e
    android.widget.Button addClassQuizButton -> f
    java.lang.String classlist -> g
    java.util.Date stdate -> h
    java.util.Date eddate -> i
    java.util.Date examdate -> j
    android.view.View$OnClickListener saveQuizListener -> k
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.touchnvoteui.PostQuizActivity$1 -> com.touchnvoteui.r:
    com.touchnvoteui.PostQuizActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.PostQuizActivity$PostQuizTask -> com.touchnvoteui.s:
    java.lang.String result -> b
    com.touchnvoteui.PostQuizActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.PostQuizQuestionActivity -> com.touchnvoteui.PostQuizQuestionActivity:
    java.lang.String title -> a
    android.widget.TextView selectedClassTextView -> b
    android.widget.EditText questionEditText -> c
    android.widget.RadioGroup answerTypeRadioGroup -> d
    android.widget.RadioButton answertTypeRadio -> e
    android.widget.RadioButton answerTypeCombo -> f
    android.widget.Button plusButton -> g
    android.widget.EditText answerEditText1 -> h
    android.widget.EditText answerEditText2 -> i
    android.widget.EditText answerEditText3 -> j
    android.widget.EditText answerEditText4 -> k
    android.widget.CheckBox option1CheckBox -> l
    android.widget.CheckBox option2CheckBox -> m
    android.widget.CheckBox option3CheckBox -> n
    android.widget.CheckBox option4CheckBox -> o
    android.widget.Button addQuestionButton -> p
    android.widget.Button postQuizButton -> q
    int count -> r
    java.util.List questionlist -> s
    android.view.View$OnClickListener plusButtonListener -> u
    android.view.View$OnClickListener addQuestionListener -> v
    int noofquestioncount -> t
    android.view.View$OnClickListener postQuizListener -> w
    void onCreate(android.os.Bundle) -> onCreate
    void addQuestion() -> a
    void radioCheck() -> b
    void comboCheck() -> c
    java.util.List getCheckedCombo() -> d
    java.lang.String questionListToString() -> e
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void access$0(com.touchnvoteui.PostQuizQuestionActivity) -> a
    java.lang.String access$1(com.touchnvoteui.PostQuizQuestionActivity) -> b
com.touchnvoteui.PostQuizQuestionActivity$1 -> com.touchnvoteui.t:
    com.touchnvoteui.PostQuizQuestionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.PostQuizQuestionActivity$2 -> com.touchnvoteui.u:
    com.touchnvoteui.PostQuizQuestionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.PostQuizQuestionActivity$3 -> com.touchnvoteui.v:
    com.touchnvoteui.PostQuizQuestionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.PostQuizQuestionActivity$postQuizTask -> com.touchnvoteui.w:
    java.lang.String result -> b
    com.touchnvoteui.PostQuizQuestionActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.ProfessorMainActivity -> com.touchnvoteui.ProfessorMainActivity:
    android.widget.Button addClassButton -> a
    android.widget.Button addStudentButton -> b
    android.widget.Button startQuizButton -> c
    android.widget.Button postTheQuizButton -> d
    android.widget.Button viewResultButton -> e
    java.lang.String result -> f
    android.view.View$OnClickListener callnewclass -> g
    android.view.View$OnClickListener callAddStudent -> h
    android.view.View$OnClickListener startQuizListener -> i
    android.view.View$OnClickListener postTheQuizListener -> j
    android.view.View$OnClickListener viewResultListener -> k
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void access$0(com.touchnvoteui.ProfessorMainActivity,java.lang.String) -> a
    java.lang.String access$1(com.touchnvoteui.ProfessorMainActivity) -> a
com.touchnvoteui.ProfessorMainActivity$1 -> com.touchnvoteui.x:
    com.touchnvoteui.ProfessorMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.ProfessorMainActivity$2 -> com.touchnvoteui.y:
    com.touchnvoteui.ProfessorMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.ProfessorMainActivity$3 -> com.touchnvoteui.z:
    com.touchnvoteui.ProfessorMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.ProfessorMainActivity$4 -> com.touchnvoteui.aa:
    com.touchnvoteui.ProfessorMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.ProfessorMainActivity$5 -> com.touchnvoteui.ab:
    com.touchnvoteui.ProfessorMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.ProfessorMainActivity$ClassAvailableTask -> com.touchnvoteui.ac:
    com.touchnvoteui.ProfessorMainActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.ProfessorMainActivity$QuizTitleListTask -> com.touchnvoteui.ad:
    com.touchnvoteui.ProfessorMainActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.ProfessorMainActivity$postTheQuizTask -> com.touchnvoteui.ae:
    com.touchnvoteui.ProfessorMainActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.RegisterActivity -> com.touchnvoteui.RegisterActivity:
    android.widget.EditText fNameEditText -> a
    android.widget.EditText lNameEditText -> b
    android.widget.EditText netIDEditText -> c
    android.widget.EditText rPasswordEditText -> d
    android.widget.EditText cRPasswordditText -> e
    android.widget.EditText q1EditText -> f
    android.widget.EditText q2EditText -> g
    android.widget.EditText q3EditText -> h
    android.widget.Button submitButton -> i
    android.widget.Button clearButton -> j
    android.widget.Spinner q1Spinner -> k
    android.widget.Spinner q2Spinner -> l
    android.widget.Spinner q3Spinner -> m
    boolean userregistered -> n
    java.lang.String result -> o
    org.apache.http.client.HttpClient client -> p
    java.lang.String classlist -> q
    android.widget.Spinner classSpinner -> r
    android.view.View$OnClickListener submitButtonClickListener -> s
    void onCreate(android.os.Bundle) -> onCreate
    boolean validateNetId() -> a
    boolean checkForDigit(java.lang.String) -> a
    boolean validateEntries() -> b
    boolean validatePassword() -> c
    boolean access$0(com.touchnvoteui.RegisterActivity) -> a
    boolean access$1(com.touchnvoteui.RegisterActivity,java.lang.String) -> a
    boolean access$2(com.touchnvoteui.RegisterActivity) -> b
    boolean access$3(com.touchnvoteui.RegisterActivity) -> c
    android.widget.Spinner access$4(com.touchnvoteui.RegisterActivity) -> d
com.touchnvoteui.RegisterActivity$1 -> com.touchnvoteui.af:
    com.touchnvoteui.RegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.touchnvoteui.RegisterActivity access$0(com.touchnvoteui.RegisterActivity$1) -> a
com.touchnvoteui.RegisterActivity$1$1 -> com.touchnvoteui.ag:
    com.touchnvoteui.RegisterActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.touchnvoteui.RegisterActivity$2 -> com.touchnvoteui.ah:
    com.touchnvoteui.RegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.RegisterActivity$UserRegisterTask -> com.touchnvoteui.ai:
    com.touchnvoteui.RegisterActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.touchnvoteui.RegisterActivity access$3(com.touchnvoteui.RegisterActivity$UserRegisterTask) -> a
com.touchnvoteui.RegisterActivity$UserRegisterTask$1 -> com.touchnvoteui.aj:
    com.touchnvoteui.RegisterActivity$UserRegisterTask this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.touchnvoteui.RegisterActivity$UserRegisterTask$2 -> com.touchnvoteui.ak:
    com.touchnvoteui.RegisterActivity$UserRegisterTask this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.touchnvoteui.ResultPieActivity -> com.touchnvoteui.ResultPieActivity:
    java.util.List answercount1 -> a
    int total1 -> b
    com.saulpower.piechart.views.PieChartView mChart -> c
    void onCreate(android.os.Bundle) -> onCreate
com.touchnvoteui.ResultTitleSelectionActivity -> com.touchnvoteui.ResultTitleSelectionActivity:
    java.lang.String quizlist -> c
    android.widget.Spinner quizListSpinner -> a
    android.widget.Button postQuizButton -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.touchnvoteui.ResultTitleSelectionActivity$1 -> com.touchnvoteui.al:
    com.touchnvoteui.ResultTitleSelectionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.ResultTitleSelectionActivity$ComputeResultTask -> com.touchnvoteui.am:
    java.lang.String result -> b
    com.touchnvoteui.ResultTitleSelectionActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.SecurityQuestionActivity -> com.touchnvoteui.SecurityQuestionActivity:
    android.widget.EditText answer1EditText -> a
    android.widget.EditText answer2EditText -> b
    android.widget.EditText answer3EditText -> c
    android.widget.TextView question1TextView -> d
    android.widget.TextView question2TextView -> e
    android.widget.TextView question3TextView -> f
    java.lang.String username -> g
    android.view.View$OnClickListener changePasswordListener -> h
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.touchnvoteui.SecurityQuestionActivity$1 -> com.touchnvoteui.an:
    com.touchnvoteui.SecurityQuestionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.SecurityQuestionActivity$CheckAnswerTask -> com.touchnvoteui.ao:
    java.lang.String result -> b
    com.touchnvoteui.SecurityQuestionActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.StoreExcelStudents -> com.touchnvoteui.StoreExcelStudents:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.touchnvoteui.StudentMainActivity -> com.touchnvoteui.StudentMainActivity:
    java.lang.String questionlist -> c
    java.lang.String username -> d
    int questioncount -> a
    java.util.HashMap answeredlist -> b
    android.widget.TextView noActivityTitle -> e
    android.widget.TextView title -> f
    android.widget.TextView question1 -> g
    android.widget.RadioGroup answerRadioGroup1 -> h
    android.widget.RadioButton answerRadio1_1 -> i
    android.widget.RadioButton answerRadio1_2 -> j
    android.widget.RadioButton answerRadio1_3 -> k
    android.widget.RadioButton answerRadio1_4 -> l
    android.widget.CheckBox answerCheckBox1_1 -> m
    android.widget.CheckBox answerCheckBox1_2 -> n
    android.widget.CheckBox answerCheckBox1_3 -> o
    android.widget.CheckBox answerCheckBox1_4 -> p
    android.widget.TextView question2 -> q
    android.widget.RadioGroup answerRadioGroup2 -> r
    android.widget.RadioButton answerRadio2_1 -> s
    android.widget.RadioButton answerRadio2_2 -> t
    android.widget.RadioButton answerRadio2_3 -> u
    android.widget.RadioButton answerRadio2_4 -> v
    android.widget.CheckBox answerCheckBox2_1 -> w
    android.widget.CheckBox answerCheckBox2_2 -> x
    android.widget.CheckBox answerCheckBox2_3 -> y
    android.widget.CheckBox answerCheckBox2_4 -> z
    android.widget.TextView question3 -> A
    android.widget.RadioGroup answerRadioGroup3 -> B
    android.widget.RadioButton answerRadio3_1 -> C
    android.widget.RadioButton answerRadio3_2 -> D
    android.widget.RadioButton answerRadio3_3 -> E
    android.widget.RadioButton answerRadio3_4 -> F
    android.widget.CheckBox answerCheckBox3_1 -> G
    android.widget.CheckBox answerCheckBox3_2 -> H
    android.widget.CheckBox answerCheckBox3_3 -> I
    android.widget.CheckBox answerCheckBox3_4 -> J
    android.widget.TextView question4 -> K
    android.widget.RadioGroup answerRadioGroup4 -> L
    android.widget.RadioButton answerRadio4_1 -> M
    android.widget.RadioButton answerRadio4_2 -> N
    android.widget.RadioButton answerRadio4_3 -> O
    android.widget.RadioButton answerRadio4_4 -> P
    android.widget.CheckBox answerCheckBox4_1 -> Q
    android.widget.CheckBox answerCheckBox4_2 -> R
    android.widget.CheckBox answerCheckBox4_3 -> S
    android.widget.CheckBox answerCheckBox4_4 -> T
    int len -> U
    java.lang.String quiztitle -> V
    android.view.View$OnClickListener submitAnswerListener -> W
    android.widget.CompoundButton$OnCheckedChangeListener checkBoxListener -> X
    void onCreate(android.os.Bundle) -> onCreate
    void setQuestion1(com.touchnvoteui.generictype.Question) -> a
    void setQuestion2(com.touchnvoteui.generictype.Question) -> b
    void setQuestion3(com.touchnvoteui.generictype.Question) -> c
    void setQuestion4(com.touchnvoteui.generictype.Question) -> d
    void deleteQuestion1() -> a
    void deleteQuestion2() -> b
    void deleteQuestion3() -> c
    void deleteQuestion4() -> d
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    int access$0(com.touchnvoteui.StudentMainActivity) -> a
    java.lang.String access$1(com.touchnvoteui.StudentMainActivity) -> b
    java.lang.String access$2(com.touchnvoteui.StudentMainActivity) -> c
com.touchnvoteui.StudentMainActivity$1 -> com.touchnvoteui.ap:
    com.touchnvoteui.StudentMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.StudentMainActivity$2 -> com.touchnvoteui.aq:
    com.touchnvoteui.StudentMainActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.touchnvoteui.StudentMainActivity$3 -> com.touchnvoteui.ar:
    com.touchnvoteui.StudentMainActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.touchnvoteui.StudentMainActivity$4 -> com.touchnvoteui.as:
    com.touchnvoteui.StudentMainActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.touchnvoteui.StudentMainActivity$5 -> com.touchnvoteui.at:
    com.touchnvoteui.StudentMainActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.touchnvoteui.StudentMainActivity$6 -> com.touchnvoteui.au:
    com.touchnvoteui.StudentMainActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.touchnvoteui.StudentMainActivity$SubmitAnswer -> com.touchnvoteui.av:
    java.lang.String result -> a
    com.touchnvoteui.StudentMainActivity this$0 -> b
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.TNVMainActivity -> com.touchnvoteui.TNVMainActivity:
    android.widget.EditText userNameEditText -> a
    android.widget.EditText passwordEditText -> b
    android.widget.Button signINButton -> c
    android.widget.Button fPasswordButton -> d
    android.widget.Button registerButton -> e
    android.view.View$OnClickListener fPasswordListener -> g
    android.view.View$OnClickListener registerButtonListener -> h
    java.lang.String result -> f
    android.view.View$OnClickListener signinButtonListener -> i
    void onCreate(android.os.Bundle) -> onCreate
    boolean validateEntries() -> a
    boolean validateNetId() -> b
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean access$0(com.touchnvoteui.TNVMainActivity) -> a
    boolean access$1(com.touchnvoteui.TNVMainActivity) -> b
com.touchnvoteui.TNVMainActivity$1 -> com.touchnvoteui.aw:
    com.touchnvoteui.TNVMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.TNVMainActivity$2 -> com.touchnvoteui.ax:
    com.touchnvoteui.TNVMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.TNVMainActivity$3 -> com.touchnvoteui.ay:
    com.touchnvoteui.TNVMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.touchnvoteui.TNVMainActivity$ClassAvailableTask -> com.touchnvoteui.az:
    com.touchnvoteui.TNVMainActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.TNVMainActivity$UserLoginTask -> com.touchnvoteui.ba:
    java.lang.String result -> b
    com.touchnvoteui.TNVMainActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.touchnvoteui.generictype.Question -> com.touchnvoteui.a.a:
    java.lang.String quiztitle -> a
    java.lang.String question -> b
    int type -> c
    java.util.List answers -> d
    java.util.List correctanswer -> e
    int count -> f
    java.lang.String getQuizTitle() -> a
    java.lang.String getQuestion() -> b
    int getType() -> c
    java.util.List getAnswers() -> d
    java.lang.String toString() -> toString
    int getCount() -> e
    com.touchnvoteui.generictype.Question toQuestion(java.lang.String) -> a
com.touchnvoteui.generictype.ValidateDate -> com.touchnvoteui.a.b:
    boolean checkdate1(java.lang.String) -> a
